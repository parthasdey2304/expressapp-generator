#!/bin/bash

if [[ "$1" == "-h" || "$1" == "--help" ]]; then
    cat <<EOL

Express Script Manual

Usage:
  express [OPTIONS]

Description:
  This script initializes an Express.js application boilerplate in a specified folder.

Options:
  -h, --help
    Display this manual and usage instructions.

  <folder_name>
    Specify the name of the folder where the Express.js app will be generated.

Examples:
  1. To generate an Express.js app in a folder named "my_app":
     \$ express my_app

  2. Display this manual and usage instructions:
     \$ express -h
     or
     \$ express --help

Instructions:
  To create a new Express.js app, provide a folder name as an argument. The script will create the necessary files and directory structure to set up a basic Express.js application.

  The generated folder will contain:
  - \`package.json\` with necessary dependencies and scripts.
  - \`index.js\` with a basic Express.js server setup.
  - \`views\` folder with an \`index.ejs\` template.
  - \`public\` folder for static assets.

  To start the Express.js server:
  1. Change directory to the folder where the Express.js app is generated:
     \$ cd <folder_name>

  2. Run the app in development mode using nodemon:
     \$ npm run dev

  3. Access the app in your web browser at http://localhost:8080/

Happy hacking!

EOL
    exit 0
fi

# Rest of the script for creating the Express app goes here...

figlet E X P R E S S

echo -n -e '\e[32mEnter the folder name (e.g. : my_app): \e[0m'
read folder_name

mkdir "$folder_name"
cd "$folder_name"

echo -e '\e[32m[INFO] Generating the Express app...\e[0m'
echo -e '\e[32m[INFO] Creating package.json...\e[0m'

sleep 1

# Create package.json manually with the specified folder_name
cat <<EOL > package.json
{
  "name": "$folder_name",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "dev": "nodemon index.js"
  },
  "keywords": [],
  "author": "",
  "license": "MIT"
}
EOL

echo -e '\e[34m[INFO] Installing the dependencies and creating the node_modules folder...\e[0m'
npm install express ejs nodemon

echo -e '\e[34m[INFO] Creating the directory structure...\e[0m'
sleep 1
touch index.js

# Write the Express app template to index.js
cat <<EOL >> index.js
const express = require('express');
const path = require('path');
const app = express();
const port = 8080;

app.set('view engine', 'ejs');
app.set('views', path.join(__dirname, 'views'));
app.use(express.static(path.join(__dirname, 'public')));

app.get('/', (req, res) => {
  res.render('index');
});

app.listen(port, () => {
  console.log(\`[INFO] Express app is running on http://localhost:\${port}\`);
});
EOL

mkdir public
mkdir views
touch views/index.ejs

# Write the boilerplate to index.ejs
cat <<EOL >> views/index.ejs
<!DOCTYPE html>
<html>
<head>
  <title>Express App</title>
</head>
<body>
  <h1>Express App Server Running</h1>
</body>
</html>
EOL

echo -e '\e[32m[INFO] Express app has been initialized...'
echo -e "\e[32m[INFO] Run the command \e[31mcd $folder_name & npm run dev \e[32m to start the Express server..."
echo -e '\e[31mHappy hacking!!!\e[0m'
